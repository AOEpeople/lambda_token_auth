// Code generated by MockGen. DO NOT EDIT.
// Source: ../token_validator.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	auth "token_authorizer"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenValidatorInterface is a mock of TokenValidatorInterface interface.
type MockTokenValidatorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTokenValidatorInterfaceMockRecorder
}

// MockTokenValidatorInterfaceMockRecorder is the mock recorder for MockTokenValidatorInterface.
type MockTokenValidatorInterfaceMockRecorder struct {
	mock *MockTokenValidatorInterface
}

// NewMockTokenValidatorInterface creates a new mock instance.
func NewMockTokenValidatorInterface(ctrl *gomock.Controller) *MockTokenValidatorInterface {
	mock := &MockTokenValidatorInterface{ctrl: ctrl}
	mock.recorder = &MockTokenValidatorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenValidatorInterface) EXPECT() *MockTokenValidatorInterfaceMockRecorder {
	return m.recorder
}

// MatchClaims mocks base method.
func (m *MockTokenValidatorInterface) MatchClaims(tokenClaims *auth.Claims, ruleClaims []byte) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MatchClaims", tokenClaims, ruleClaims)
	ret0, _ := ret[0].(bool)
	return ret0
}

// MatchClaims indicates an expected call of MatchClaims.
func (mr *MockTokenValidatorInterfaceMockRecorder) MatchClaims(tokenClaims, ruleClaims interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MatchClaims", reflect.TypeOf((*MockTokenValidatorInterface)(nil).MatchClaims), tokenClaims, ruleClaims)
}

// RetrieveClaimsFromToken mocks base method.
func (m *MockTokenValidatorInterface) RetrieveClaimsFromToken(tokenInput string) (*auth.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveClaimsFromToken", tokenInput)
	ret0, _ := ret[0].(*auth.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveClaimsFromToken indicates an expected call of RetrieveClaimsFromToken.
func (mr *MockTokenValidatorInterfaceMockRecorder) RetrieveClaimsFromToken(tokenInput interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveClaimsFromToken", reflect.TypeOf((*MockTokenValidatorInterface)(nil).RetrieveClaimsFromToken), tokenInput)
}

// ValidateClaimsForRule mocks base method.
func (m *MockTokenValidatorInterface) ValidateClaimsForRule(tokenClaims *auth.Claims, requestedRole string, rules []auth.Rule) (*auth.Rule, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateClaimsForRule", tokenClaims, requestedRole, rules)
	ret0, _ := ret[0].(*auth.Rule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateClaimsForRule indicates an expected call of ValidateClaimsForRule.
func (mr *MockTokenValidatorInterfaceMockRecorder) ValidateClaimsForRule(tokenClaims, requestedRole, rules interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateClaimsForRule", reflect.TypeOf((*MockTokenValidatorInterface)(nil).ValidateClaimsForRule), tokenClaims, requestedRole, rules)
}
